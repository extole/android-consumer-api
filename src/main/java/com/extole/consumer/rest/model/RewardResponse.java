/*
 * Extole consumer-api
 * This is a sample generated doc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@extole.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.extole.consumer.rest.model;

import java.util.*;
import java.time.*;
import java.math.*;
import com.extole.consumer.*;
import io.swagger.v3.oas.annotations.media.Schema;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.ArrayList;
/**
 * RewardResponse
 */


public class RewardResponse {
  @JsonProperty("reward_id")
  private String rewardId = null;

  @JsonProperty("state")
  private String state = null;

  @JsonProperty("partner_reward_id")
  private String partnerRewardId = null;

  @JsonProperty("code")
  private String code = null;

  @JsonProperty("face_value")
  private String faceValue = null;

  @JsonProperty("amount")
  private String amount = null;

  /**
   * Gets or Sets faceValueType
   */
  public enum FaceValueTypeEnum {
    PERCENT_OFF("PERCENT_OFF"),
    POINTS("POINTS"),
    MONTH("MONTH"),
    USD("USD"),
    GBP("GBP"),
    EUR("EUR"),
    JPY("JPY"),
    CNY("CNY"),
    CAD("CAD"),
    AUD("AUD"),
    BRL("BRL"),
    INR("INR"),
    NZD("NZD"),
    MXN("MXN"),
    KRW("KRW"),
    TWD("TWD");

    private String value;

    FaceValueTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static FaceValueTypeEnum fromValue(String text) {
      for (FaceValueTypeEnum b : FaceValueTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("face_value_type")
  private FaceValueTypeEnum faceValueType = null;

  @JsonProperty("date_earned")
  private String dateEarned = null;

  @JsonProperty("date_issued")
  private String dateIssued = null;

  @JsonProperty("date_delivered")
  private String dateDelivered = null;

  @JsonProperty("campaign_id")
  private String campaignId = null;

  @JsonProperty("program_label")
  private String programLabel = null;

  @JsonProperty("sandbox")
  private String sandbox = null;

  @JsonProperty("slots")
  private List<String> slots = null;

  @JsonProperty("tags")
  private List<String> tags = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    TANGO_V2("TANGO_V2"),
    COUPON("COUPON"),
    CUSTOM_REWARD("CUSTOM_REWARD"),
    PAYPAL_PAYOUTS("PAYPAL_PAYOUTS");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("reward_supplier_id")
  private String rewardSupplierId = null;

  @JsonProperty("partner_reward_supplier_id")
  private String partnerRewardSupplierId = null;

  @JsonProperty("reward_name")
  private String rewardName = null;

  @JsonProperty("expiry_date")
  private String expiryDate = null;

  @JsonProperty("redeemed_date")
  private String redeemedDate = null;

  @JsonProperty("id")
  private String id = null;

  public RewardResponse rewardId(String rewardId) {
    this.rewardId = rewardId;
    return this;
  }

   /**
   * Get rewardId
   * @return rewardId
  **/
  @Schema(description = "")
  public String getRewardId() {
    return rewardId;
  }

  public void setRewardId(String rewardId) {
    this.rewardId = rewardId;
  }

  public RewardResponse state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public RewardResponse partnerRewardId(String partnerRewardId) {
    this.partnerRewardId = partnerRewardId;
    return this;
  }

   /**
   * Get partnerRewardId
   * @return partnerRewardId
  **/
  @Schema(description = "")
  public String getPartnerRewardId() {
    return partnerRewardId;
  }

  public void setPartnerRewardId(String partnerRewardId) {
    this.partnerRewardId = partnerRewardId;
  }

  public RewardResponse code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(description = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public RewardResponse faceValue(String faceValue) {
    this.faceValue = faceValue;
    return this;
  }

   /**
   * Get faceValue
   * @return faceValue
  **/
  @Schema(description = "")
  public String getFaceValue() {
    return faceValue;
  }

  public void setFaceValue(String faceValue) {
    this.faceValue = faceValue;
  }

  public RewardResponse amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @Schema(description = "")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public RewardResponse faceValueType(FaceValueTypeEnum faceValueType) {
    this.faceValueType = faceValueType;
    return this;
  }

   /**
   * Get faceValueType
   * @return faceValueType
  **/
  @Schema(description = "")
  public FaceValueTypeEnum getFaceValueType() {
    return faceValueType;
  }

  public void setFaceValueType(FaceValueTypeEnum faceValueType) {
    this.faceValueType = faceValueType;
  }

  public RewardResponse dateEarned(String dateEarned) {
    this.dateEarned = dateEarned;
    return this;
  }

   /**
   * Get dateEarned
   * @return dateEarned
  **/
  @Schema(description = "")
  public String getDateEarned() {
    return dateEarned;
  }

  public void setDateEarned(String dateEarned) {
    this.dateEarned = dateEarned;
  }

  public RewardResponse dateIssued(String dateIssued) {
    this.dateIssued = dateIssued;
    return this;
  }

   /**
   * Get dateIssued
   * @return dateIssued
  **/
  @Schema(description = "")
  public String getDateIssued() {
    return dateIssued;
  }

  public void setDateIssued(String dateIssued) {
    this.dateIssued = dateIssued;
  }

  public RewardResponse dateDelivered(String dateDelivered) {
    this.dateDelivered = dateDelivered;
    return this;
  }

   /**
   * Get dateDelivered
   * @return dateDelivered
  **/
  @Schema(description = "")
  public String getDateDelivered() {
    return dateDelivered;
  }

  public void setDateDelivered(String dateDelivered) {
    this.dateDelivered = dateDelivered;
  }

  public RewardResponse campaignId(String campaignId) {
    this.campaignId = campaignId;
    return this;
  }

   /**
   * Get campaignId
   * @return campaignId
  **/
  @Schema(description = "")
  public String getCampaignId() {
    return campaignId;
  }

  public void setCampaignId(String campaignId) {
    this.campaignId = campaignId;
  }

  public RewardResponse programLabel(String programLabel) {
    this.programLabel = programLabel;
    return this;
  }

   /**
   * Get programLabel
   * @return programLabel
  **/
  @Schema(description = "")
  public String getProgramLabel() {
    return programLabel;
  }

  public void setProgramLabel(String programLabel) {
    this.programLabel = programLabel;
  }

  public RewardResponse sandbox(String sandbox) {
    this.sandbox = sandbox;
    return this;
  }

   /**
   * Get sandbox
   * @return sandbox
  **/
  @Schema(description = "")
  public String getSandbox() {
    return sandbox;
  }

  public void setSandbox(String sandbox) {
    this.sandbox = sandbox;
  }

  public RewardResponse slots(List<String> slots) {
    this.slots = slots;
    return this;
  }

  public RewardResponse addSlotsItem(String slotsItem) {
    if (this.slots == null) {
      this.slots = new ArrayList<>();
    }
    this.slots.add(slotsItem);
    return this;
  }

   /**
   * Get slots
   * @return slots
  **/
  @Schema(description = "")
  public List<String> getSlots() {
    return slots;
  }

  public void setSlots(List<String> slots) {
    this.slots = slots;
  }

  public RewardResponse tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public RewardResponse addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public RewardResponse type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public RewardResponse rewardSupplierId(String rewardSupplierId) {
    this.rewardSupplierId = rewardSupplierId;
    return this;
  }

   /**
   * Get rewardSupplierId
   * @return rewardSupplierId
  **/
  @Schema(description = "")
  public String getRewardSupplierId() {
    return rewardSupplierId;
  }

  public void setRewardSupplierId(String rewardSupplierId) {
    this.rewardSupplierId = rewardSupplierId;
  }

  public RewardResponse partnerRewardSupplierId(String partnerRewardSupplierId) {
    this.partnerRewardSupplierId = partnerRewardSupplierId;
    return this;
  }

   /**
   * Get partnerRewardSupplierId
   * @return partnerRewardSupplierId
  **/
  @Schema(description = "")
  public String getPartnerRewardSupplierId() {
    return partnerRewardSupplierId;
  }

  public void setPartnerRewardSupplierId(String partnerRewardSupplierId) {
    this.partnerRewardSupplierId = partnerRewardSupplierId;
  }

  public RewardResponse rewardName(String rewardName) {
    this.rewardName = rewardName;
    return this;
  }

   /**
   * Get rewardName
   * @return rewardName
  **/
  @Schema(description = "")
  public String getRewardName() {
    return rewardName;
  }

  public void setRewardName(String rewardName) {
    this.rewardName = rewardName;
  }

  public RewardResponse expiryDate(String expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Get expiryDate
   * @return expiryDate
  **/
  @Schema(description = "")
  public String getExpiryDate() {
    return expiryDate;
  }

  public void setExpiryDate(String expiryDate) {
    this.expiryDate = expiryDate;
  }

  public RewardResponse redeemedDate(String redeemedDate) {
    this.redeemedDate = redeemedDate;
    return this;
  }

   /**
   * Get redeemedDate
   * @return redeemedDate
  **/
  @Schema(description = "")
  public String getRedeemedDate() {
    return redeemedDate;
  }

  public void setRedeemedDate(String redeemedDate) {
    this.redeemedDate = redeemedDate;
  }

  public RewardResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RewardResponse rewardResponse = (RewardResponse) o;
    return Objects.equals(this.rewardId, rewardResponse.rewardId) &&
        Objects.equals(this.state, rewardResponse.state) &&
        Objects.equals(this.partnerRewardId, rewardResponse.partnerRewardId) &&
        Objects.equals(this.code, rewardResponse.code) &&
        Objects.equals(this.faceValue, rewardResponse.faceValue) &&
        Objects.equals(this.amount, rewardResponse.amount) &&
        Objects.equals(this.faceValueType, rewardResponse.faceValueType) &&
        Objects.equals(this.dateEarned, rewardResponse.dateEarned) &&
        Objects.equals(this.dateIssued, rewardResponse.dateIssued) &&
        Objects.equals(this.dateDelivered, rewardResponse.dateDelivered) &&
        Objects.equals(this.campaignId, rewardResponse.campaignId) &&
        Objects.equals(this.programLabel, rewardResponse.programLabel) &&
        Objects.equals(this.sandbox, rewardResponse.sandbox) &&
        Objects.equals(this.slots, rewardResponse.slots) &&
        Objects.equals(this.tags, rewardResponse.tags) &&
        Objects.equals(this.type, rewardResponse.type) &&
        Objects.equals(this.rewardSupplierId, rewardResponse.rewardSupplierId) &&
        Objects.equals(this.partnerRewardSupplierId, rewardResponse.partnerRewardSupplierId) &&
        Objects.equals(this.rewardName, rewardResponse.rewardName) &&
        Objects.equals(this.expiryDate, rewardResponse.expiryDate) &&
        Objects.equals(this.redeemedDate, rewardResponse.redeemedDate) &&
        Objects.equals(this.id, rewardResponse.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rewardId, state, partnerRewardId, code, faceValue, amount, faceValueType, dateEarned, dateIssued, dateDelivered, campaignId, programLabel, sandbox, slots, tags, type, rewardSupplierId, partnerRewardSupplierId, rewardName, expiryDate, redeemedDate, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RewardResponse {\n");
    
    sb.append("    rewardId: ").append(toIndentedString(rewardId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    partnerRewardId: ").append(toIndentedString(partnerRewardId)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    faceValue: ").append(toIndentedString(faceValue)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    faceValueType: ").append(toIndentedString(faceValueType)).append("\n");
    sb.append("    dateEarned: ").append(toIndentedString(dateEarned)).append("\n");
    sb.append("    dateIssued: ").append(toIndentedString(dateIssued)).append("\n");
    sb.append("    dateDelivered: ").append(toIndentedString(dateDelivered)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    programLabel: ").append(toIndentedString(programLabel)).append("\n");
    sb.append("    sandbox: ").append(toIndentedString(sandbox)).append("\n");
    sb.append("    slots: ").append(toIndentedString(slots)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    rewardSupplierId: ").append(toIndentedString(rewardSupplierId)).append("\n");
    sb.append("    partnerRewardSupplierId: ").append(toIndentedString(partnerRewardSupplierId)).append("\n");
    sb.append("    rewardName: ").append(toIndentedString(rewardName)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    redeemedDate: ").append(toIndentedString(redeemedDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
