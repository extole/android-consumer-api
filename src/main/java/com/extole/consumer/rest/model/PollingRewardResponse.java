/*
 * Extole consumer-api
 * This is a sample generated doc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@extole.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.extole.consumer.rest.model;

import java.util.*;
import java.time.*;
import java.math.*;
import com.extole.consumer.*;
import io.swagger.v3.oas.annotations.media.Schema;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import com.extole.consumer.rest.model.QualityResults;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.extole.consumer.rest.model.RewardResponse;
import java.util.ArrayList;
/**
 * PollingRewardResponse
 */


public class PollingRewardResponse {
  @JsonProperty("reward")
  private RewardResponse reward = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    PENDING("PENDING"),
    SUCCEEDED("SUCCEEDED"),
    FAILED("FAILED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("quality_results")
  private List<QualityResults> qualityResults = null;

  public PollingRewardResponse reward(RewardResponse reward) {
    this.reward = reward;
    return this;
  }

   /**
   * Get reward
   * @return reward
  **/
  @Schema(description = "")
  public RewardResponse getReward() {
    return reward;
  }

  public void setReward(RewardResponse reward) {
    this.reward = reward;
  }

  public PollingRewardResponse status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public PollingRewardResponse qualityResults(List<QualityResults> qualityResults) {
    this.qualityResults = qualityResults;
    return this;
  }

  public PollingRewardResponse addQualityResultsItem(QualityResults qualityResultsItem) {
    if (this.qualityResults == null) {
      this.qualityResults = new ArrayList<>();
    }
    this.qualityResults.add(qualityResultsItem);
    return this;
  }

   /**
   * Get qualityResults
   * @return qualityResults
  **/
  @Schema(description = "")
  public List<QualityResults> getQualityResults() {
    return qualityResults;
  }

  public void setQualityResults(List<QualityResults> qualityResults) {
    this.qualityResults = qualityResults;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PollingRewardResponse pollingRewardResponse = (PollingRewardResponse) o;
    return Objects.equals(this.reward, pollingRewardResponse.reward) &&
        Objects.equals(this.status, pollingRewardResponse.status) &&
        Objects.equals(this.qualityResults, pollingRewardResponse.qualityResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reward, status, qualityResults);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PollingRewardResponse {\n");
    
    sb.append("    reward: ").append(toIndentedString(reward)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    qualityResults: ").append(toIndentedString(qualityResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
